name: Integration Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: first_court_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

      redis:
        image: redis:latest
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

      elasticsearch:
        image: elasticsearch:8.12.1
        env:
          discovery.type: single-node
          ES_JAVA_OPTS: "-Xms512m -Xmx512m"
          xpack.security.enabled: false
        ports:
          - 9200:9200
        options: >-
          --health-cmd "curl http://localhost:9200/_cluster/health"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 10

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.13'
        cache: 'pip'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Create .env file
      run: |
        echo "ENV=test" > .env
        echo "LOG_LEVEL=INFO" >> .env
        echo "DEBUG=true" >> .env
        echo "LLM_PROVIDER=deepseek" >> .env
        echo "DEEPSEEK_API_KEY=${{ secrets.DEEPSEEK_API_KEY }}" >> .env
        echo "DATABASE_URL=postgresql://postgres:postgres@localhost:5432/first_court_test" >> .env
        echo "DATABASE_POOL_SIZE=5" >> .env
        echo "REDIS_URL=redis://localhost:6379/0" >> .env
        echo "REDIS_PREFIX=first_court" >> .env
        echo "REDIS_MAX_CONNECTIONS=10" >> .env
        echo "ELASTICSEARCH_URL=http://localhost:9200" >> .env
        echo "ELASTICSEARCH_INDEX_PREFIX=first_court" >> .env
        echo "GOOGLE_CLIENT_ID=${{ secrets.GOOGLE_CLIENT_ID }}" >> .env
        echo "GOOGLE_CLIENT_SECRET=${{ secrets.GOOGLE_CLIENT_SECRET }}" >> .env
        echo "GOOGLE_API_KEY=${{ secrets.GOOGLE_API_KEY }}" >> .env
        echo "GOOGLE_CALENDAR_ID=primary" >> .env
        echo "GOOGLE_DRIVE_FOLDER_ID=root" >> .env
        echo "GOOGLE_AUTH_URI=https://accounts.google.com/o/oauth2/auth" >> .env
        echo "GOOGLE_TOKEN_URI=https://oauth2.googleapis.com/token" >> .env
        echo "GOOGLE_AUTH_PROVIDER_CERT_URL=https://www.googleapis.com/oauth2/v1/certs" >> .env
        echo "GOOGLE_REDIRECT_URI=http://localhost:8000/oauth2callback" >> .env
        echo "SLACK_DEFAULT_CHANNEL=test-channel" >> .env
        echo "MAX_CONCURRENT_CASES=5" >> .env

    - name: Run migrations
      run: |
        python -m alembic upgrade head

    - name: Run integration tests
      env:
        PYTHONPATH: ${{ github.workspace }}
      run: |
        python -m pytest tests/integrations/ -v --cov=src --cov-report=xml

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v4
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        file: ./coverage.xml
        flags: integration-tests
        name: codecov-umbrella
        fail_ci_if_error: true
